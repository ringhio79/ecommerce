{"filter":false,"title":"views.py","tooltip":"/accounts/views.py","undoManager":{"mark":3,"position":3,"stack":[[{"start":{"row":0,"column":0},"end":{"row":3,"column":0},"action":"remove","lines":["from django.shortcuts import render","","# Create your views here.",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":34,"column":98},"action":"insert","lines":["from django.contrib.auth import login, authenticate","from django.contrib.auth.forms import UserCreationForm","from django.shortcuts import render, redirect","from .forms import ProfileRegistrationForm","","def register(request):","    if request.method == 'POST':","        # load the http request into two forms, user and profile","        form = UserCreationForm(request.POST)","        profile_form = ProfileRegistrationForm(request.POST, request.FILES)","        ","        ","        # if both forms are valid, we craeate the USer and Profile in the Database","        if form.is_valid() and profile_form.is_valid():","            # Save the User object to DB, by calling the save directly on the Form.Save","            # Retun the USer object so that we can use it later to set the user of the Profile","            user = form.save()","            ","            # Get the Profile from the profile_form, without actually saving anything to the DB (using commit=false)","            profile = profile_form.save(commit=False)","            # use the user created above as a value for the user in profile","            profile.user = user","            # save the new profile to the database","            profile.save()","            ","            # now we can log in as the user","            username = form.cleaned_data.get('username')","            raw_password = form.cleaned_data.get('password1')","            user = authenticate(username=username, password=raw_password)","            login(request, user)","            return redirect('home')","    else:","        form = UserCreationForm()","        profile_form = ProfileRegistrationForm","    return render(request, 'accounts/register.html', {'form': form, 'profile_form': profile_form})"]}],[{"start":{"row":9,"column":8},"end":{"row":9,"column":75},"action":"remove","lines":["profile_form = ProfileRegistrationForm(request.POST, request.FILES)"],"id":3},{"start":{"row":9,"column":4},"end":{"row":9,"column":8},"action":"remove","lines":["    "]},{"start":{"row":9,"column":0},"end":{"row":9,"column":4},"action":"remove","lines":["    "]},{"start":{"row":8,"column":45},"end":{"row":9,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":33,"column":98},"action":"remove","lines":["from django.contrib.auth import login, authenticate","from django.contrib.auth.forms import UserCreationForm","from django.shortcuts import render, redirect","from .forms import ProfileRegistrationForm","","def register(request):","    if request.method == 'POST':","        # load the http request into two forms, user and profile","        form = UserCreationForm(request.POST)","        ","        ","        # if both forms are valid, we craeate the USer and Profile in the Database","        if form.is_valid() and profile_form.is_valid():","            # Save the User object to DB, by calling the save directly on the Form.Save","            # Retun the USer object so that we can use it later to set the user of the Profile","            user = form.save()","            ","            # Get the Profile from the profile_form, without actually saving anything to the DB (using commit=false)","            profile = profile_form.save(commit=False)","            # use the user created above as a value for the user in profile","            profile.user = user","            # save the new profile to the database","            profile.save()","            ","            # now we can log in as the user","            username = form.cleaned_data.get('username')","            raw_password = form.cleaned_data.get('password1')","            user = authenticate(username=username, password=raw_password)","            login(request, user)","            return redirect('home')","    else:","        form = UserCreationForm()","        profile_form = ProfileRegistrationForm","    return render(request, 'accounts/register.html', {'form': form, 'profile_form': profile_form})"],"id":4},{"start":{"row":0,"column":0},"end":{"row":23,"column":70},"action":"insert","lines":["from django.contrib.auth import login, authenticate","from django.contrib.auth.forms import UserCreationForm","from django.shortcuts import render, redirect","","def register(request):","    if request.method == 'POST':","        # Load the HTTP Request into two forms, for the User, and the Profile","        form = UserCreationForm(request.POST)","","        # If both forms are valid, we create the User and Profile in the Database","        if form.is_valid():","            # Save the User object to DB, by calling save directly on the Form.","            # Return the User object so that we can use it later to set the user of the Profile.","            user = form.save()","            ","            # Now we can log in as the new user ","            username = form.cleaned_data.get('username')","            raw_password = form.cleaned_data.get('password1')","            user = authenticate(username=username, password=raw_password)","            login(request, user)","            return redirect('home')","    else:","        form = UserCreationForm()","    return render(request, 'accounts/register.html', { 'form': form })"]}],[{"start":{"row":9,"column":8},"end":{"row":9,"column":81},"action":"remove","lines":["# If both forms are valid, we create the User and Profile in the Database"],"id":5},{"start":{"row":9,"column":4},"end":{"row":9,"column":8},"action":"remove","lines":["    "]},{"start":{"row":9,"column":0},"end":{"row":9,"column":4},"action":"remove","lines":["    "]},{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"remove","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":180,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":22,"column":70},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1534837041888,"hash":"b4c2c72b76c54f6458917edb8114f64717fdd3c1"}